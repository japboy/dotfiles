# NEOVIM PLUGINS SYNCHRONOUSLY LOADED


##
# dein
# :help dein
# https://github.com/Shougo/dein.vim

[[plugins]]
repo = 'Shougo/dein.vim'


##
# easymotion
# https://github.com/easymotion/vim-easymotion

[[plugins]]
repo = 'easymotion/vim-easymotion'


##
# neomru
# https://github.com/Shougo/neomru.vim

[[plugins]]
repo = 'Shougo/neomru.vim'


##
# neoyank
# https://github.com/Shougo/neoyank.vim

[[plugins]]
repo = 'Shougo/neoyank.vim'


##
# denite
# :help denite
# https://github.com/Shougo/denite.nvim

[[plugins]]
repo = 'Shougo/denite.nvim'
depends = ['neomru.vim', 'neoyank.vim']
hook_add = '''
nnoremap <silent> <C-k><C-b> :<C-u>Denite buffer<CR>
nnoremap <silent> <C-k><C-f> :<C-u>Denite file_rec<CR>
nnoremap <silent> <C-k><C-g> :<C-u>Denite grep -buffer-name=search-buffer-denite<CR>
nnoremap <silent> <C-k><C-r> :<C-u>Denite -resume -buffer-name=search-buffer-denite -select=+1<CR>
nnoremap <silent> <C-k><C-l> :<C-u>Denite line<CR>
nnoremap <silent> <C-k><C-u> :<C-u>Denite file_mru<CR>
nnoremap <silent> <C-k><C-y> :<C-u>Denite neoyank<CR>
'''
hook_post_source = '''
call denite#custom#var('file_rec', 'command',)
    \ ['pt', '--follow', '--nocolor', '--nogroup', '-g:', ''])

call denite#custom#var('grep', 'command', ['pt'])
call denite#custom#var('grep', 'default_opts',
    \ ['--nogroup', '--nocolor', '--smart-case'])
call denite#custom#var('grep', 'recursive_opts', [])
call denite#custom#var('grep', 'pattern_opt', [])
call denite#custom#var('grep', 'separator', ['--'])
call denite#custom#var('grep', 'final_opts', [])
'''


##
# deoplete
# :help deoplete
# https://github.com/Shougo/deoplete.nvim

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = '''
let g:deoplete#enable_at_startup = 1
let g:deoplete#file#enable_buffer_path = 1
let g:deoplete#sources = {}
let g:deoplete#sources._ = ['buffer', 'tag', 'file', 'omni']
let g:deoplete#omni#functions = {}
let g:deoplete#omni#functions.css = 'csscomplete#CompleteCSS'
let g:deoplete#omni#functions.javascript = 'javascriptcomplete#CompleteJS'
let g:deoplete#omni#functions.python = 'pythoncomplete#Complete'
let g:deoplete#omni#functions.xml = 'xmlcomplete#CompleteTags'
let g:deoplete#omni#functions.csharp = 'OmniSharp#Complete'
set completeopt+=noinsert
'''


##
# vim-tempalte
# https://github.com/aperezdc/vim-template

[[plugins]]
repo = 'aperezdc/vim-template'
hook_add = '''
let g:templates_no_builtin_templates = 1
let g:templates_directory = ['$XDG_CONFIG_HOME/nvim/templates']
'''


##
# EditorConfig Vim Plugin
# https://github.com/editorconfig/editorconfig-vim

[[plugins]]
repo = 'editorconfig/editorconfig-vim'
hook_add = '''
let g:EditorConfig_max_line_indicator = "line"
'''


##
# Vim colorschemes
# https://github.com/flazz/vim-colorschemes

[[plugins]]
repo = 'flazz/vim-colorschemes'
hook_add = '''
set termguicolors
if has('gui_vimr')
    colorschemes editplus
else
    colorscheme Monokai
endif
'''


##
# Solarized
# https://github.com/frankier/neovim-colors-solarized-truecolor-only

[[plugins]]
repo = 'frankier/neovim-colors-solarized-truecolor-only'
hook_add = '''
"set termguicolors
"if has('gui_running')
"    set background=light
"else
"    set background=dark
"endif
"colorscheme solarized
'''


##
# NERDTree
# https://github.com/scrooloose/nerdtree

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
if !has('gui_vimr')
    let g:NERDTreeShowBookmarks=1
    autocmd VimEnter * NERDTree
    autocmd VimEnter * wincmd w
    autocmd BufEnter * NERDTreeMirror
endif
'''


##
# dispatch.vim
# https://github.com/tpope/vim-dispatch

[[plugins]]
repo = 'tpope/vim-dispatch'


##
# syntastic
# https://github.com/scrooloose/syntastic

[[plugins]]
repo = 'scrooloose/syntastic'
depends = ['vim-dispatch']
hook_add = '''
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 0
let g:syntastic_check_on_wq = 1
let g:syntastic_enable_signs = 1

let g:syntastic_error_symbol = 'e'
let g:syntastic_style_error_symbol = 'e'
let g:syntastic_warning_symbol = 'w'
let g:syntastic_style_warning_symbol = 'w'

"let g:syntastic_css_checkers = ['stylelint']
"let g:syntastic_javascript_checkers = ['eslint']
'''
hook_post_source = '''
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
'''


##
# fugitive.vim
# https://github.com/tpope/vim-fugitive

[[plugins]]
repo = 'tpope/vim-fugitive'


##
# vim-airline
# https://github.com/vim-airline/vim-airline

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'vim-airline/vim-airline'
depends = ['vim-airline-themes', 'vim-fugitive']
hook_add = '''
let g:airline_theme = 'solarized'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
'''
