// Place your settings in this file to overwrite the default settings
{
  // Controls how lines should wrap. Can be:
  //  - 'off' (disable wrapping),
  //  - 'on' (viewport wrapping),
  //  - 'wordWrapColumn' (wrap at `editor.wordWrapColumn`) or
  //  - 'bounded' (wrap at minimum of viewport and `editor.wordWrapColumn`).
  "editor.wordWrap": "on",
  "editor.wordWrapColumn": 100,

  // Controls the cursor style, accepted values are 'block', 'line' and 'underline'
  "editor.cursorStyle": "block",

  // Controls how the editor should render whitespace characters, possibilities are 'none', 'boundary', and 'all'. The 'boundary' option does not render single spaces between words.
  "editor.renderWhitespace": "boundary",

  // Controls whether the editor should render indent guides
  "editor.renderIndentGuides": true,

  // Controls if the minimap is shown
  "editor.minimap.enabled": true,

  // Configure glob patterns for excluding files and folders.
  "files.exclude": {
    "**/.git": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/__pycache__": true,
    "**/node_modules": true,
    "**/.DS_Store": true,
    "**/.ctags": true,
    "**/.eslintcache": true,
    "**/.stylelintcache": true
  },

  // Configure file associations to languages (e.g. "*.extension": "html"). These have precedence over the default associations of the languages installed.
  "files.associations": {
      "*.asp": "asp",
      "*.css": "postcss",
      "*.vue": "vue"
  },

  // The default end of line character.
  "files.eol": "\n",

  // When enabled, will attempt to guess the character set encoding when opening files
  "files.autoGuessEncoding": true,

  // Controls SCSS validation and problem severities.
  // Enables or disables all validations
  "css.validate": false,

  // Controls SCSS validation and problem severities.
  // Enables or disables all validations
  "scss.validate": false,

  // Validation for PostCSS files
  "postcss.validate": false,

  // Specifies the color theme used in the workbench.
  "workbench.colorTheme": "Default Light+",

  // Specifies the icon theme used in the workbench.
  "workbench.iconTheme": "vs-minimal",

  // Turns auto fix on save on or off.
  "eslint.autoFixOnSave": true,

  // An array of language ids which should be validated by ESLint
  "eslint.validate": [
    "javascript",
    "javascriptreact",
    "typescriptreact",
    "vue"
  ],

  // Support using flow through your node_modules folder, WARNING: Checking this box is a security risk. When you open a project we will immediately run code contained within it.
  "flow.useNPMPackagedFlow": true,

 // Control whether stylelint is enabled for CSS/SCSS/Less files or not.
  "stylelint.enable": true,

  // A optional set of additional document types to run stylelint against.
  "stylelint.additionalDocumentSelectors": [
    "javascriptreact",
    "typescriptreact",
    "vue"
  ],

  // Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).
  "python.venvPath": "${workspaceRoot}",

  // Whether to lint Python files when no workspace is opened.
  "python.linting.enabledWithoutWorkspace": false,

  // Whether to lint Python files using pylint.
  "python.linting.pylintEnabled": false,

  // Whether to lint Python files using flake8
  "python.linting.flake8Enabled": true,

  // Whether to lint Python files using mypy.
  "python.linting.mypyEnabled": true,

  // Format the document upon saving.
  "python.formatting.formatOnSave": true,

  // Fully qualified path to tag file (exuberant ctag file), used to provide workspace symbols.
  "python.workspaceSymbols.tagFilePath": "${workspaceRoot}/tags",

  // Whether to enable or disable unit testing using nosetests.
  "python.unitTest.nosetestsEnabled": true,

  // Use system clipboard for unnamed register.
  "vim.useSystemClipboard": true,

  // Show all matches of the most recent search pattern
  "vim.hlsearch": true,

  // Enable the EasyMotion plugin for Vim.
  "vim.easymotion": true,

  // Use neovim on backend. (only works for Ex commands right now). You should restart VScode after enable/disabling this for the changes to take effect. NOTE: Neovim must be installed and neovimPath must be set the executable in order for this setting to work. Otherwise, vscodevim will crash.
  "vim.enableNeovim": true,

  // Path to run neovim executable. For example, /usr/bin/nvim, or
  "vim.neovimPath": "/Users/Yu/.homebrew/bin/nvim",

  // Get rid of that annoying message that shows up everytime you make a new file
  "vim.disableAnnoyingNeovimMessage": true
}
